name: dental_ai_app
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.7.2

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # Firebase
  firebase_core: ^3.3.0 
  firebase_auth: ^5.2.0 
  cloud_firestore: ^5.1.0
  firebase_storage: ^12.1.0 
  firebase_app_check: ^0.3.2+6

  # Gestión de Estado (Riverpod)
  flutter_riverpod: ^2.5.1
  riverpod_annotation: ^2.3.5 # Para generación de código con Riverpod

  # UI & UX
  cupertino_icons: ^1.0.6
  google_fonts: ^6.2.1         # Para fuentes personalizadas
  flutter_svg: ^2.0.10+1       # Para usar imágenes SVG si las tienes

  # Captura de Imágenes y Permisos
  image_picker: ^1.1.2         # Para seleccionar imágenes de galería/cámara
  camera: ^0.11.0+1            # Para control directo de la cámara (guía paso a paso)
  path_provider: ^2.1.3        # Para obtener rutas del sistema de archivos
  permission_handler: ^11.3.1  # Para solicitar permisos (cámara, ubicación, notificaciones)

  # Red y APIs
  http: ^1.2.1                 # Para llamadas HTTP genéricas (API del blog)
  google_generative_ai: ^0.4.3 # SDK de Dart para Gemini API
  dio: ^5.5.0+1                # Cliente HTTP alternativo, a veces preferido por su robustez

  # Mapas y Ubicación
  google_maps_flutter: ^2.7.0
  geolocator: ^12.0.0          # Para obtener la ubicación actual del usuario

  # Notificaciones Locales
  flutter_local_notifications: ^17.2.1

  # Utilidades
  shared_preferences: ^2.2.3   # Para almacenamiento local simple (ej. si aceptó T&C)
  intl: ^0.19.0                # Para formateo (fechas, números, etc.)
  url_launcher: ^6.3.0         # Para abrir URLs (ej. artículos del blog externos)
  flutter_html: ^3.0.0-beta.2  # Si el contenido del blog viene en HTML y necesitas renderizarlo
  equatable: ^2.0.5            # Para simplificar comparaciones de objetos y modelos
  go_router: ^14.2.0           # Para una navegación más robusta y basada en rutas
  uuid: ^4.3.3
  carousel_slider: 5.0.0
  flutter_launcher_icons: ^0.13.1
  font_awesome_flutter: ^10.8.0

  #sign google
  google_sign_in: ^6.3.0

flutter_launcher_icons:
  android: true  # Generar íconos para Android
  ios: true      # Generar íconos para iOS
  image_path: "assets/icons/dentiLogo.png" # Ruta a tu imagen
  min_sdk_android: 24 # Opcional: asegúrate de que coincida con tu minSdk  


dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0
  build_runner: ^2.4.11         # Necesario para riverpod_generator y otros generadores
  riverpod_generator: ^2.4.0   # Generador de código para Riverpod
  custom_lint: ^0.6.4
  riverpod_lint: ^2.3.10

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  
  # assets:
  #   - assets/images/logo.png
  #   - assets/icons/
  #   - assets/fonts/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
